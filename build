#!/bin/bash -l
function buildBinary(){
  $DOCKERBIN run --rm -it --privileged -v $(pwd)/source:/opt/wine-electrum/drive_c/tate/ guruvan/tate-winbuild /usr/bin/build-binary $VERSION
  if [[ $? = 0 ]]; then
    echo "Build successful."
  else
    echo "Seems like the build failed. Exiting."
    exit
  fi
  cp $TARGETFOLDER/dist/tate.exe $(pwd)/releases/tate-$VERSION.exe
  cp $(pwd)/source/tate-setup.exe $(pwd)/releases/tate-$VERSION-setup.exe
  echo "You can find your tate $VERSION binaries in the releases folder."

}

function buildImage(){
  echo "Building image"
  $DOCKERBIN build -t guruvan/tate-winbuild .
}

function prepareFile(){
  echo "Preparing file for Tate version $VERSION"
  if [ -e "$TARGETPATH" ]; then
    echo "Version tar already downloaded."
  else
    wget https://s3-us-west-2.amazonaws.com/mazaclub-public-configs/$FILENAME -O $TARGETPATH
  fi

  if [ -d "$TARGETFOLDER" ]; then
    echo "Version is already extracted"
  else
    tar -xvf $TARGETPATH -C $(pwd)/source
  fi
}

if [[ $# -gt 0 ]]; then
  VERSION=$1
  FILENAME=Tate-$VERSION.tar.gz
  TARGETPATH=$(pwd)/source/$FILENAME
  TARGETFOLDER=$(pwd)/source/tate-$VERSION
  echo "Building Tate $VERSION from $FILENAME"
else
  echo "Usage: ./build <version>."
  echo "For example: ./build 1.9.8"
  exit
fi

which docker
if [[ $? = 0 ]]; then
  DOCKERBIN=$(which docker)
fi

which docker.io
if [[ $? = 0 ]]; then
  DOCKERBIN=$(which docker.io)
fi

if [[ -z "$DOCKERBIN" ]]; then
        echo "Could not find docker binary, exiting"
        exit
else
        echo "Using docker at $DOCKERBIN"
fi

# Build docker image
buildImage

# Prepare host file system
prepareFile

# Build files
buildBinary
